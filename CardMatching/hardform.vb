Imports System.IO
Public Class hard
    Dim h As New StartingForm
    Private Sub hard_Load(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles MyBase.Load

    End Sub

    Public score, counter, storehighscore, tries As Integer
    Private random As New Random
    Private icons =
        New List(Of String) From {"P", "Q", "R", "S", "T", "U", "V",
                                "W", "X", "Y", ">", "<", "P", "Q", "R", "S", "T", "U", "V",
                                "W", "X", "Y", ">", "<"}

    'for each block in tabellayout1 if that block is a label (checked by TryCast(variable , type) ) then on those label 
    'any random variable is generated by random function
    Private Sub AssignIconsToSquares()

        For Each variable In hTableLayoutPanel1.Controls
            Dim iconhLabel = TryCast(variable, Label)
            If iconhLabel IsNot Nothing Then
                Dim randomNumber = random.Next(icons.Count)
                iconhLabel.Text = icons(randomNumber)
                'iconhLabel.ForeColor = iconhLabel.BackColor
                icons.removeat(randomNumber)
            End If
        Next
        hTimer2.Start()
        hTimer3.Start()

    End Sub
    'function like constructor
    Public Sub New()
        InitializeComponent()

        AssignIconsToSquares()


    End Sub

    Private firstClicked As Label = Nothing

    Private secondClicked As Label = Nothing
    'handles the user selected two labels are same then make them visible otherwise hide them
    Private Sub hLabel_Click(ByVal sender As System.Object,
                    ByVal e As System.EventArgs) Handles hLabel9.Click,
hLabel8.Click, hLabel7.Click, hLabel6.Click, hLabel5.Click, hLabel4.Click,
hLabel3.Click, hLabel2.Click, hLabel16.Click, hLabel15.Click, hLabel14.Click,
hLabel13.Click, hLabel12.Click, hLabel11.Click, hLabel10.Click, hLabel1.Click,
hLabel18.Click, hLabel17.Click, hLabel19.Click, hLabel20.Click, hLabel21.Click,
hLabel22.Click, hLabel23.Click, hLabel24.Click
        If hTimer1.Enabled Then Exit Sub

        Dim clickedhLabel As Label = TryCast(sender, Label)

        If clickedhLabel IsNot Nothing Then


            If clickedhLabel.ForeColor = Color.Black Then Exit Sub

            'clickedhLabel.ForeColor = Color.Black

            If firstClicked Is Nothing Then
                firstClicked = clickedhLabel
                firstClicked.ForeColor = Color.Black
                Exit Sub
            End If

            secondClicked = clickedhLabel
            secondClicked.ForeColor = Color.Black

            CheckForWinner()

            If firstClicked.Text = secondClicked.Text Then
                h.playoktone()
                score = score + 10
                tries = tries + 1
                firstClicked = Nothing
                secondClicked = Nothing
                hTextBox6.Text = score
                Exit Sub
            Else
                tries = tries + 1
                h.playerrortone()
                score = score - 5
                hTextBox6.Text = score
            End If

            hTimer1.Start()

        End If


    End Sub

    'This will manage if the two icons don’t match then after how long time hide both of them.
    Private Sub Timer1_Tick(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles hTimer1.Tick
        hTimer1.Stop()
        firstClicked.ForeColor = firstClicked.BackColor
        secondClicked.ForeColor = secondClicked.BackColor

        firstClicked = Nothing
        secondClicked = Nothing

    End Sub

    'timer2 will manage display time 
    Private Sub Timer2_Tick(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles hTimer2.Tick
        hTimer2.Stop()

        For Each variable In hTableLayoutPanel1.Controls
            Dim iconlabel = TryCast(variable, Label)
            If iconlabel IsNot Nothing Then
                iconlabel.ForeColor = iconlabel.BackColor
            End If
        Next

    End Sub

    'timer 3 is for counter timer
    Private Sub Timer3_Tick(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles hTimer3.Tick
        counter = counter + 1
        hTextBox4.Text = counter
        hTextBox2.Text = tries
    End Sub

    Private Sub CheckForWinner()

        ' Go through all of the labels in the TableLayoutPanel,  
        ' checking each one to see if its icon is matched 
        For Each control In hTableLayoutPanel1.Controls
            Dim iconLabel = TryCast(control, Label)
            If iconLabel IsNot Nothing AndAlso
               iconLabel.ForeColor = iconLabel.BackColor Then Exit Sub
        Next

        ' If the loop didn't return, it didn't find  
        ' any unmatched icons 
        ' That means the user won. Show a message and close the form
        score = score + 10
        tries = tries + 1
        hTextBox6.Text = score
        hTextBox2.Text = tries
        hTimer3.Enabled = False
        h.playdonetone()
        MessageBox.Show("You matched all the icons! and you scored " & score & "and taken " & counter & "seconds ", "Congratulations ")
        storehighscore = score
        'read all 5 scores from the file and sort them and check whether new score is greater than lowest value stored in file if so then replace with new value
        'in startin if values are less than 5 then i have not takle that case
        Dim filerd As StreamReader
        filerd = My.Computer.FileSystem.OpenTextFileReader(Application.StartupPath & "\hhighscores.txt")
        Dim intscorearray(5), tempinteger, i As Integer
        Dim temps, namearray(5), scorearray(5), tempstring As String

        'read line from file and split them in scores and names

        For i = 0 To 4
            temps = filerd.ReadLine
            Dim array2() As String = Split(temps, "*", 2)
            namearray(i) = array2(0)
            scorearray(i) = array2(1)
        Next
        filerd.Close()

        'convert in int from string
        For i = 0 To 4
            intscorearray(i) = scorearray(i)
        Next

        ''sorting them and setting them according to value

        For i = 0 To 4
            For j = 0 To 3

                If (intscorearray(j + 1) < intscorearray(j)) Then

                    tempinteger = intscorearray(j)
                    intscorearray(j) = intscorearray(j + 1)
                    intscorearray(j + 1) = tempinteger

                    tempstring = scorearray(j)
                    scorearray(j) = scorearray(j + 1)
                    scorearray(j + 1) = tempstring

                    tempstring = namearray(j)
                    namearray(j) = namearray(j + 1)
                    namearray(j + 1) = tempstring

                End If

            Next
        Next



        If (storehighscore > intscorearray(0)) Then
            intscorearray(0) = storehighscore
        End If


        scorearray(0) = intscorearray(0)
        namearray(0) = InputBox("Enter Your Name Here  ", " New HighScore", "Name")

        Dim file As StreamWriter
        file = My.Computer.FileSystem.OpenTextFileWriter(Application.StartupPath & "\hhighscores.txt", False)
        file.WriteLine(namearray(4) & "*" & scorearray(4))
        file.WriteLine(namearray(3) & "*" & scorearray(3))
        file.WriteLine(namearray(2) & "*" & scorearray(2))
        file.WriteLine(namearray(1) & "*" & scorearray(1))
        file.WriteLine(namearray(0) & "*" & scorearray(0))
        file.Close()
        StartingForm.Show()
        Close()

    End Sub
End Class